

What happens when you initialize a repository? Why do you need to do it?

In git a Repository is initialized by running the following command in the directory to be the Repository:

$git init

It will initialize and create all the necessary artificats for git, so that you can start creating commits and add files to the version control


-----------------------------------

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area is an interim stage where files can me added to build a logical unit of work before committing the changes to the repository as a commit.


----------

How can you use the staging area to make sure you have one commit per logical change?


You can add all the changes the conform to a logical change into the staging area, then compare it with the latest commit, and commit only meaninful changes from the working directory to the staging area, and then do the commit.

-------

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When you want to have separete versions of the application, where each version may contain different features. An specific branch can be used to add all the specific functionality for a version  of the application, while there is another version of the application going on in a different branch, and finally you can have a master branch where you can fix common isssue that are present in all branches, so that later there can be merge to fix the issues in all branches.


--------

Now that youâ€™ve had some experience creating branches and drawing diagrams of your history, go add the following question and your thoughts on it to your reflections file:

How do the diagrams help you visualize the branch structure?


The diagramas help you to easly visualize the hierarchy and flow of all the commits that conform a branch and how different branches can be related, in the sense that to know from which commit exactly did the new branch was created from. It also helps visualizing the deattached commits to build new branches without previously impacting any other branch while working on the changes and doing new commits.

